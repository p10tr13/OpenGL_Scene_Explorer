#version 400 core

layout(vertices = 16) out;

struct Wind
{
    float amp;
    float freq;
    float speed;
};

uniform Wind wind;
uniform float time;

vec3 applyWind(Wind wind, vec3 pos, float time);

void main() {
    vec3 originalPos = gl_in[gl_InvocationID].gl_Position.xyz;
    vec3 changedPos = applyWind(wind, originalPos, time);
    gl_out[gl_InvocationID].gl_Position = vec4(changedPos, 1.0);

    if (gl_InvocationID == 0) {
        gl_TessLevelOuter[0] = 8;
        gl_TessLevelOuter[1] = 8;
        gl_TessLevelOuter[2] = 8;
        gl_TessLevelOuter[3] = 8;
        gl_TessLevelInner[0] = 8;
        gl_TessLevelInner[1] = 8;
    }
};

vec3 applyWind(Wind wind, vec3 pos, float time)
{
    if (pos.x == 0)
        return pos;
    float change = sin(pos.x * wind.freq + time * wind.speed) * cos(pos.y * wind.freq + time * wind.speed);
    return vec3(pos.x, pos.y, pos.z + change * wind.amp);
}